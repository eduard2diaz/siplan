# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'es'
    is_system_maintance: '%env(IS_SYSTEM_MAINTANCE)%'
    storage_directory: '%env(STORAGE_DIRECTORY)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    #App\EventSubscriber\UsuarioSubscriber: ~
    #DEFINIENDO MIS PROPIOS SERVICIOS
    usuario_subscriber:
        class: App\EventSubscriber\UsuarioSubscriber
        public: true
        tags:
            - { name: doctrine.event_subscriber,  connection: default }
        arguments: ['@service_container']

    fichero_subscriber:
        class: App\EventSubscriber\FicheroSubscriber
        public: true
        tags:
            - { name: doctrine.event_subscriber,  connection: default }
        arguments: ['@service_container']

    grupo_subscriber:
        class: App\EventSubscriber\GrupoSubscriber
        public: true
        tags:
            - { name: doctrine.event_subscriber,  connection: default }
        arguments: ['@service_container']

    app_bundle.locale_listener:
        class: App\EventListener\TranslateListener
        arguments: ["%kernel.default_locale%"]
        tags:
            - { name: kernel.event_subscriber }

    area_service:
        class: App\Services\AreaService
        public: true

    app.loginlistener:
        class: App\EventListener\LoginListener
        arguments: ["@doctrine"]
        tags:
            - { name: kernel.event_listener, event: security.interactive_login, method: onSecurityInteractiveLogin }

    app.logoutlistener:
        class: App\EventListener\LogoutListener
        arguments: ['@doctrine']

    entity.validator.period:
        class: App\Validator\PeriodValidator
        public: true
        autowire: true
        autoconfigure: true
        tags:
            - { name: validator.constraint_validator, alias: entity.validator.period }
        arguments: ['@doctrine']

    app.email_service:
        class: App\Services\EmailService
        arguments: ['%env(MAILER_URL)%']
        public: true